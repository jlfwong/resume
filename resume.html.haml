!!! Strict
%html{:lang => "en", "xml:lang" => "en", :xmlns => "http://www.w3.org/1999/xhtml", :id => 'resume'}
  %head
    %meta{:content => "text/html; charset=utf-8", "http-equiv" => "Content-Type"}
    %title Jamie Wong
    :sass
      body
        a
          border: none !important

      body
        h1
          color: black !important

      .container
        padding-top: 25px !important
        padding-bottom: 25px !important

      // Because Jobmine smashes all your HTML together, if you don't scope
      // the styles, it'll mess with your transcript and work term reviews
      #jlfwong-container
        width: 100%

        // ------------ Begin Reset -------------
        body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, fieldset, input, textarea, p, blockquote, th, td
          margin: 0
          padding: 0

        table
          border-collapse: collapse
          border-spacing: 0

        fieldset, img
          border: 0

        address, caption, cite, code, dfn, th, var
          font-style: normal
          font-weight: normal

        caption, th
          text-align: left

        h1, h2, h3, h4, h5, h6
          font-size: 100%
          font-weight: normal

        q:before, q:after
          content: ''

        abbr, acronym
          border: 0

        *
          outline: none

        legend
          margin: 0
          padding: 0

        body
          height: 100%

        a img
          display: block
        // -------------  End Reset -------------

        width: 750px
        margin: 0 auto
        font-family: Garamond, "Times New Roman", serif
        font-size: 10pt

        .page_break
          page-break-before: always

        h1
          font-size: 27pt
          font-weight: bold
          color: #777

        .header
          text-align: center

        table
          margin-left: auto
          margin-right: auto
          margin-bottom: 1em
          border-collapse: collapse
          border-bottom: 1px groove black
          width: 100%
          font-size: 10pt
          td
            padding-left: 4px
            padding-right: 4px
            width: 30%

        td, th
          &.left
            text-align: left
          &.right
            text-align: right
          &.center
            text-align: center

        th
          font-weight: bold

        h2, h3
          font-weight: bold

        h3, h4
          margin-left: 2em

        ul
          margin-bottom: 1em
          ul
            margin-bottom: 0

        li
          margin-left: 5em
          li
            margin-left: 2em

        code
          font-size: 9pt

        tfoot
          height: 4pt

        a
          color: black
          text-decoration: none
          border-bottom: 1px #666 dotted
          &:hover
            color: #666
            border-bottom: none

        .summary p
          margin: 0 1em 1em 1em
          margin-bottom: 1em
          font-size: 10pt
          text-indent: 2em
          text-align: justify

  %body
    #jlfwong-container
      .header
        %h1 Jamie Wong

      %table.info_table
        %thead
          %tr
            %th.left &nbsp;
            %th.center &nbsp;
            %th.right &nbsp;
        %tfoot
          -# Spacer
          %tr
            %td{:colspan => 3}
              &nbsp;
        %tbody
          %tr
            %td.left
              %a{:href => 'http://github.com/jlfwong'}
                github.com/jlfwong
            %td.center
              %a{:href => 'http://www.jamie-wong.com'}
                www.jamie-wong.com
            %td.right jamie.lf.wong@gmail.com

      :markdown
        Work Experience
        ---------------
        ### Software Engineer at [Figma][], September 2016 - Present
          * Worked with CTO to re-write our WebGL-based C++ document renderer to make zooming and dragging [up to 3x faster][Figma, Faster].
          * Implemented [developer handoff capabilities in Figma], performing user research, discussing
            with a designer, and writing code generation in C++ targeting CSS for web, Swift for iOS, and Java for Android.
          * Designed and implemented test infrastructure in C++ & TypeScript for the document editor with record & playback functionality
            to facilitate integration-level testing of large portions of the editor that were previously impractical to test.
          * Worked with CTO to re-write our JavaScript build system in TypeScript to move from > 15s cold restarts to < 1s, resolving
            an internal painpoint for engineers on our team.
          * Mentored intern for 8 months, working with her to unblock a critical use-case for UI component re-use for our customers.

        [developer handoff capabilities in Figma]: https://help.figma.com/editor/developer-handoff
        [Figma, Faster]: https://blog.figma.com/figma-faster-d1947f9c26ca
        [Figma]: http://www.figma.com/

        ### Software Engineer in Infrastructure at [Khan Academy][], June 2014 - March 2016
          * Member of team of 4 engineers optimizing user-perceived site performance (4 months)
            * Reduced time to visually complete for all critical content pages by > 50%
            * Video page visually complete time reduced to 3s from 7s on a US DSL connection
            * Focused on optimizations that applied well to India and other countries
              with similarly low bandwidth conditions
            * Designed, co-authored implementation, and deployed server-side rendering service
              handling ~100QPS at peak traffic
          * Led engineering team of 4 to construct and launch [translator portal][] (3 months)
            * Used by teams around the world to monitor translation progress and stay
              focused on the most critical translation tasks, later leveraged to [launch Khan Academy in Hindi][]
            * Acted as primary contact with third-party service Crowdin's CEO and technical staff
              to secure bug fixes and feature development on their side necessary for our project's
              success
          * Worked with one other engineer to fix category of data loss caused by incorrect transaction usage (6 weeks)
            * [Built a distributed locking mechanism to prevent lost datastore writes][blog1]
            * [Monkey-patched Google AppEngine datastore libraries to provide runtime assertions
              of transactional safety][blog2]
          * Mentored intern for 4 months, helping her reduce the duration of deploys
          * Interviewed ~20 candidates for devops and software engineering positions

        [blog1]: http://engineering.khanacademy.org/posts/user-write-lock.htm
        [blog2]: http://engineering.khanacademy.org/posts/transaction-safety.htm
        [translator portal]: https://www.khanacademy.org/translations
        [launch Khan Academy in Hindi]: https://www.khanacademy.org/about/blog/post/134448779971/khan-academy-in-hindi
        [speeding up our deploys]: http://engineering.khanacademy.org/posts/translation-server.htm

        ### Software Developer Intern and Backpacker at [Khan Academy][], September - December 2013 (Remote)
          * Introduced a custom CommonJS-esque module system now deployed throughout the entire website
          * Built clientside JavaScript test infrastructure integratable into CI based on Mocha

        ### Security Engineer Intern at [Square][], January - April 2013
          * Worked on [Keywhiz][], a file-based secret management and distribution system (written in Java) deployed on all Square servers
          * Deployed applications into high availability environments with HAproxy
          * Created dashboard to track expiration of critical SSL certificates, likely preventing a few payment-blocking outages

        [Keywhiz]: https://square.github.io/keywhiz/
        [Square]: http://square.com/

        ### Software Developer Intern at [Khan Academy][], May - August 2012 (Remote)
          * Worked with [John Resig][] to build and launch the [Khan Academy Computer Science][] platform, used by more than 100,000 users
          * Had full ownership over building the Google App Engine backend, contributed to in-browser programming environment

        [Khan Academy Computer Science]: http://khanacademy.org/cs
        [John Resig]: http://ejohn.org/
        [Phabricator]: http://phabricator.org/
        [Khan Academy]: http://www.khanacademy.org/

        ### Frontend Developer Intern at Facebook, September - December 2011
          * Worked on early prototypes of Facebook Home, devtools, JavaScript test infrastructure

        ### Earlier experience
          * Software Developer Intern at [Kontagent][] (now Upsight), January - April 2011
          * Web Developer Intern at [The Working Group][], May - August 2010
          * Camp Instructor at [Virtual Ventures Science & Technology Summer Camp][], Summers of 2007-2009

        [Kontagent]: http://www.upsight.com/
        [The Working Group]: https://twg.io/
        [Virtual Ventures Science & Technology Summer Camp]: http://carleton.ca/vv/

      .page_break

      :markdown

        Sample of Open Source Contributions
        -----------------------------------
        ### [jlfwong/speedscope][] (primary author)
          * GPU-accelerated in-browser flamegraph viewer supporting import from JavaScript, Ruby, Haskell, and native code
          * > 10 KLOC TypeScript & GLSL codebase
          * &gt; 600 stars on GitHub

        ### [Khan/aphrodite][] (co-author)
          * [A performance-focused tool for writing CSS in JavaScript, built for React][blog3]
          * &gt; 400,000 downloads per month via npm, &gt; 4000 stars on GitHub

        ### [mozilla/source-map][] (contributor)
          * Contributed patch for consuming [indexed source maps][] for
            source-to-source debugging as part of work for Khan Academy
          * +1KLOC, -400LOC change to unfamiliar codebase

        [mozilla/source-map]: https://github.com/mozilla/source-map/pull/127
        [Khan/aphrodite]: https://github.com/Khan/aphrodite
        [jlfwong/speedscope]: https://github.com/jlfwong/speedscope
        [blog3]: http://engineering.khanacademy.org/posts/aphrodite-inline-css.htm
        [chrome2calltree]: https://github.com/jlfwong/chrome2calltree
        [indexed source maps]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt

      :markdown

        Other Technical Experience
        --------------------------
        ### [jamie-wong.com][blog] - Personal Technical Blog
          * Two highest traffic posts, "[Color: From Hexcodes to Eyeballs][]" and "[Ray Marching and Signed Distance Functions][]"
            have each received > 50,000 page views to date.

        [blog]: http://jamie-wong.com/
        [Color: From Hexcodes to Eyeballs]: http://jamie-wong.com/post/color/
        [Ray Marching and Signed Distance Functions]: http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/

        ### Competitive Algorithmic Programmer
          * ACM ICPC competitor, 13th place finish out of 113 teams in East Central North America
          * Facebook Hacker Cup Online Round 2 Qualifier, 2011, 2013
          * Google Code Jam Online Round 2 Qualifier, 2009, 2010, 2012, 2013, 2016
          * National Bronze Medallist, Canadian Computing Contest, University of Waterloo, February 2009

        ### Stack Overflow Contributor
        #### [stackoverflow.com][stack overflow] (username: Jamie Wong), March 29, 2010 - Present
          * Over 12,000 reputation, 240 answers

        [stack overflow]: http://stackoverflow.com/users/303911/jamie-wong

        ### Languages
          * Extensive experience in C++, TypeScript, Python, JavaScript

        Education
        ---------

        ### Bachelor of Software Engineering, Co-operative Program, Dean's Honours List
          * Honours Software Engineering, [University of Waterloo][uw], Ontario, September 2009 - June 2014
          * Major Average: 94%

        ### Interesting Coursework
          * Built a [raytracer][] in C++, implementing vertex normal
            interpolation, Fresnel reflection, refraction, texture mapping, and
            depth-of-field for CS488
          * Wrote an operating system in C to run on an ARM processor,
            including a basic memory allocator, a co-operative scheduler, and
            interrupt handlers for SE350
          * Wrote a compiler in Scala targeting x86 for a large subset of Java,
            including a DFA-driven lexer, SLR parser, type checking, and code
            generation for CS444

        [raytracer]: http://jamie-wong.com/experiments/raytracer/
        [uw]: https://uwaterloo.ca/